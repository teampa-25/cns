*
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.nv
.cache
__pycache__
*.pyc
*.pyo
*.pyd
*.swp
*.swo
*.egg-info
output_images
logs
.DS_Store
.idea
.vscode
.env
venv
ENV
build
*.log
*.bak
*.tmp
*.old
*.orig
*.lock
*.tar
*.tar.gz
*.zip
*.egg
*.whl
*.so
*.a
*.o
*.out
*.bin
*.exe
*.dll
*.dylib
*.db
*.sqlite
*.h5
*.pth
*.npz
*.npy
*.ckpt
*.onnx
*.pb
*.pt
*.weights
*.cfg
*.yml
*.yaml
*.json
*.csv
*.tsv
*.xls
*.xlsx
*.pdf
*.doc
*.docx
*.ppt
*.pptx
*.mp4
*.avi
*.mov
*.mkv
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.svg
*.ico
*.webp
*.mp3
*.wav
*.ogg
*.flac
*.m4a
*.aac
*.wma
*.mid
*.midi
*.txt
*.md
*.rst
*.html
*.xml
*.js
*.css
*.scss
*.less
*.sass
*.map
*.ts
*.tsx
*.jsx
*.c
*.cpp
*.h
*.hpp
*.cc
*.cxx
*.cu
*.cuh
*.f
*.f90
*.f95
*.f03
*.f08
*.sh
*.bat
*.ps1
*.fish
*.zsh
*.bash
*.ksh
*.csh
*.tcsh
*.pl
*.pm
*.rb
*.gemspec
*.go
*.mod
*.sum
*.rs
*.rlib
*.toml
*.lock
*.ini
*.cfg
*.conf
*.config
*.properties
*.prop
*.prefs
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot
.nv

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
.vscode
.idea

# model checkpoints and tf records
checkpoints/*
!checkpoints/cns*.pth
!checkpoints/*json
logs/
runs/
temp/
cns/thirdparty/*
!cns/thirdparty/prepare_superglue.py
cns/temp/
# cns/reimpl/
cns/benchmark/results/
*.pkl
*.npz


!checkpoints/
!cns/
!demo_teal_ur.py
!demo_sim_Erender.py
!pipeline.py
!pyenv.cfg
!requirements.txt
!train_cns.py